# MEM ESCALAR, Como estaba + junta con los switches
# MEM VECTORIAL, 200 KB

main:
    MOV rs, 0
    MOV t5, 256
    MUL t5, 256
    MOV g11, t5
    SUB t5, 1 # Memory Pointer
    JMP applyFilterLoop

applyFilterLoop:
    CMP t5, 0
    JLE end
    CMP rs, 0
    JEQ sepia
    CMP rs, 1
    JEQ gray
    CMP rs, 2
    JEQ negative
    JMP end

sepia:
# Effect
    # Cargar a Registros
    VMOV vr, t5 # primeros 4 valores
    MOV  t6, t5
    ADD  t6, g11
    MOV  t7, t6
    ADD  t7, g11
    VMOV vg, t6 # primeros 4 valores
    VMOV vb, t7 # primeros 4 valores
    # SEPIA
    # RED
    VMOV vtr, vr
    VDIV vtr, 3
    VADD vtr, vg
    VMOV vt, vb
    VDIV vt, 5
    VADD vtr, vg
    # GREEN
    VMOV vtg, vr
    VDIV vtg, 3
    VADD vtg, vg
    VMOV vt, vb
    VDIV vt, 6
    VADD vtg, vg
    # BLUE
    VMOV vtb, vr
    VDIV vtb, 3
    VMOV vt, vg
    VDIV vt, 2
    VADD vtb, vt
    VMOV vt, vb
    VDIV vt, 5
    VADD vtb, vg
    # ASSIGN
    VMOV vr, vtr
    VMOV vg, vtg
    VMOV vb, vtb
    # MEMORY
    VSTR t5, vr
    VSTR t6, vg
    VSTR t7, vb
    JMP applyFilter
# Loop
    SUB r5, 4
    JMP applyFilter

gray:
# Effect
    VMOV vr, t5 # primeros 4 valores
    MOV  t6, t5
    ADD  t6, g11
    MOV  t7, t6
    ADD  t7, g11
    VMOV vg, t6 # primeros 4 valores
    VMOV vb, t7 # primeros 4 valores
    VDIV vr, 3
    VDIV vg, 3
    VDIV vb, 3
    VADD vr, vg
    VADD vr, vb
    VMOV vg, vr
    VMOV vb, vr
    # MEMORY
    VSTR t5, vr
    VSTR t6, vg
    VSTR t7, vb
# Loop
    SUB r5, 4
    JMP applyFilter

negative:
    MOV  t6, t5
    ADD  t6, g11
    MOV  t7, t6
    ADD  t7, g11
# R
    VMOV vr, 255
    VMOV vt, t5
    VSUB vr, vt
# G
    VMOV vg, 255
    VMOV vt, t6
    VSUB vg, vt
# B
    VMOV vb, 255
    VMOV vt, t7
    VSUB vb, vt
    # MEMORY
    VSTR t5, vr
    VSTR t6, vg
    VSTR t7, vb
# Loop
    SUB r5, 4
    JMP applyFilter

end:
    add ra, 0
